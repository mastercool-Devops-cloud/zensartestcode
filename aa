import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import java.util.Map;

class LogFactoryTest {

    @Test
    void testCreateRestLog() {
        BaseLogDetails baseLogDetails = new BaseLogDetails();
        baseLogDetails.setTimestamp(System.currentTimeMillis());
        baseLogDetails.setSource("test-source");
        baseLogDetails.setMessage("Test request log");

        String httpMethod = "POST";
        String url = "/test-endpoint";
        Map<String, String> body = Map.of("key1", "value1");
        int statusCode = 200;
        long latencyMs = 150;

        RestLog restLog = LogFactory.createRestLog(baseLogDetails, httpMethod, url, body, statusCode, latencyMs);

        assertNotNull(restLog);
        assertEquals(baseLogDetails, restLog.getBaseLogDetails());
        assertEquals(httpMethod, restLog.getHttpMethod());
        assertEquals(url, restLog.getUrl());
        assertEquals(body, restLog.getBody());
        assertEquals(statusCode, restLog.getStatusCode());
        assertEquals(latencyMs, restLog.getLatencyMs());
    }

    @Test
    void testCreateErrorLog() {
        BaseLogDetails baseLogDetails = new BaseLogDetails();
        baseLogDetails.setTimestamp(System.currentTimeMillis());
        baseLogDetails.setSource("test-source");
        baseLogDetails.setMessage("Test error log");

        String errorCode = "500";
        String errorMessage = "Internal Server Error";
        String stackTrace = "Exception at line 42";

        ErrorLog errorLog = LogFactory.createErrorLog(baseLogDetails, errorCode, errorMessage, stackTrace);

        assertNotNull(errorLog);
        assertEquals(baseLogDetails, errorLog.getBaseLogDetails());
        assertEquals(errorCode, errorLog.getErrorCode());
        assertEquals(errorMessage, errorLog.getErrorMessage());
        assertEquals(stackTrace, errorLog.getStackTrace());
    }
}
