
import nl.altindag.log.LogCaptor;
import org.junit.jupiter.api.Test;

import javax.servlet.http.HttpServletRequest;
import java.util.Collections;
import java.util.Enumeration;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.mockito.Mockito.*;

class LoggingUtilTest {

    @Test
    void testLogRequestEnsuresAllFieldsPopulated() {
        // Arrange
        LogCaptor logCaptor = LogCaptor.forClass(LoggingUtil.class);

        HttpServletRequest mockRequest = mock(HttpServletRequest.class);
        when(mockRequest.getMethod()).thenReturn("POST");
        when(mockRequest.getRequestURI()).thenReturn("/test-uri");
        when(mockRequest.getHeaderNames()).thenReturn(Collections.enumeration(Collections.singletonList("User-Agent")));
        when(mockRequest.getHeader("User-Agent")).thenReturn("JUnit-Test-Agent");
        when(mockRequest.getRemoteAddr()).thenReturn("127.0.0.1");

        // Act
        LoggingUtil.logRequest(mockRequest);

        // Assert
        assertTrue(logCaptor.getInfoLogs().size() > 0, "No info logs were captured.");
        
        String logMessage = logCaptor.getInfoLogs().get(0);
        assertTrue(logMessage.contains("\"method\":\"POST\""), "Method not logged properly.");
        assertTrue(logMessage.contains("\"uri\":\"/test-uri\""), "URI not logged properly.");
        assertTrue(logMessage.contains("\"headers\":{\"User-Agent\":\"JUnit-Test-Agent\"}"), "Headers not logged properly.");
        assertTrue(logMessage.contains("\"clientIpAddress\":\"127.0.0.1\""), "Client IP not logged properly.");
    }
}
--------------------------
<dependency>
    <groupId>io.github.hakky54</groupId>
    <artifactId>logcaptor</artifactId>
    <version>2.7.10</version>
    <scope>test</scope>
</dependency>
