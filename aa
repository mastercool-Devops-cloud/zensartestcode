public static String getRequestBody(HttpServletRequest request) {
        return Optional.ofNullable(request)
                .filter(req -> req instanceof ContentCachingRequestWrapper)
                .map(req -> (ContentCachingRequestWrapper) req)
                .map(wrapper -> new String(wrapper.getContentAsByteArray(), StandardCharsets.UTF_8))
                .orElse("Request body not available");
    }

-----------------------------------------
private static String getRequestBody(HttpServletRequest request) {
    // Check if request is wrapped with ContentCachingRequestWrapper
    if (!(request instanceof ContentCachingRequestWrapper)) {
        return "Request not wrapped with ContentCachingRequestWrapper.";
    }

    // Use ContentCachingRequestWrapper to get the request body
    ContentCachingRequestWrapper wrappedRequest = (ContentCachingRequestWrapper) request;
    byte[] content = wrappedRequest.getContentAsByteArray();
    
    // If content is available, return it
    if (content.length > 0) {
        return new String(content, StandardCharsets.UTF_8);
    }

    // If content is not available, read from the InputStream manually (Java 8 compatible)
    try {
        StringBuilder body = new StringBuilder();
        int read;
        char[] buffer = new char[1024];
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(request.getInputStream(), StandardCharsets.UTF_8))) {
            while ((read = reader.read(buffer)) != -1) {
                body.append(buffer, 0, read);
            }
        }
        return body.toString();
    } catch (IOException e) {
        return "Error reading request body: " + e.getMessage();
    }
}


