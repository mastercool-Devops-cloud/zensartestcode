import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

import java.util.HashMap;
import java.util.Map;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

@ExtendWith(MockitoExtension.class)
class ErrorLogHelperTest {

    @Mock
    private LogUtils mockLogUtils;

    @Mock
    private TimeUtil mockTimeUtil;

    private Map<String, String> mapData;

    @BeforeEach
    void setUp() {
        mapData = new HashMap<>();
        mapData.put("applicationName", "TestApp");
        mapData.put("environment", "TestEnv");
    }

    @Test
    void testBuildLogException_WithValidException() {
        Exception exception = new RuntimeException("Test exception");
        
        assertDoesNotThrow(() -> ErrorLogHelper.buildLogException(exception, mapData));
        
        // Verify that logException was called
        verify(mockLogUtils, times(1)).logException(any(ErrorLog.class));
    }

    @Test
    void testBuildLogException_WithNullException() {
        assertDoesNotThrow(() -> ErrorLogHelper.buildLogException(null, mapData));
    }

    @Test
    void testBuildLogException_WithNullMapData() {
        Exception exception = new RuntimeException("Test exception");
        
        assertDoesNotThrow(() -> ErrorLogHelper.buildLogException(exception, null));
    }
}
