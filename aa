 * Evaluate Process Indicator to see if the contract is ready for processingÂ 
 ** SUs and CC are considered ready but DE can be pulled in with a 0 amount and this must not be put onto the queue.
 * IBM MQ producer class to add message onto the queue
 * Set the Indicator Process to something like "S" for sent to PRISM
import org.springframework.stereotype.Service;

@Service
public class ContractService {

    private final MQProducer mqProducer;

    public ContractService(MQProducer mqProducer) {
        this.mqProducer = mqProducer;
    }

    public void evaluateAndProcessContract(Contract contract) {
        // Evaluate the contract and process it
        if (contract.getProcessIndicator().equals("SU") || contract.getProcessIndicator().equals("CC")) {
            // Send to MQ if process indicator is SU or CC
            mqProducer.sendMessage(contract);
        } else if (contract.getProcessIndicator().equals("DE")) {
            // If it's DE with 0 amount, do nothing
            if (contract.getAmount() == 0) {
                System.out.println("Contract with ID: " + contract.getContractId() + " has a DE indicator and 0 amount, skipping.");
            }
        } else {
            System.out.println("Unknown process indicator for contract with ID: " + contract.getContractId());
        }
    }
}



import org.springframework.jms.core.JmsTemplate;
import org.springframework.stereotype.Service;

@Service
public class MQProducer {

    private final JmsTemplate jmsTemplate;

    public MQProducer(JmsTemplate jmsTemplate) {
        this.jmsTemplate = jmsTemplate;
    }

    public void sendMessage(Contract contract) {
        // Evaluate Process Indicator
        if (contract.getProcessIndicator().equals("SU") || contract.getProcessIndicator().equals("CC")) {
            // If the process indicator is SU or CC, send the message
            System.out.println("Sending contract with ID: " + contract.getContractId());
            jmsTemplate.convertAndSend("DEV.QUEUE.1", contract);
        } else if (contract.getProcessIndicator().equals("DE") && contract.getAmount() == 0) {
            // If process indicator is DE and the amount is 0, do not send to the queue
            System.out.println("Contract with ID: " + contract.getContractId() + " has a DE indicator and 0 amount, will not be sent.");
        }
    }
}


import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/contracts")
public class ContractController {

    private final ContractService contractService;

    public ContractController(ContractService contractService) {
        this.contractService = contractService;
    }

    @PostMapping("/process")
    public String processContract(@RequestBody Contract contract) {
        contractService.evaluateAndProcessContract(contract);
        return "Contract processed!";
    }
}

