import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import jakarta.servlet.http.HttpServletRequest;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import java.util.HashMap;
import java.util.Map;

class RequestLogProcessorTest {

    private RequestLogProcessor requestLogProcessor;

    @Mock
    private HttpServletRequest mockRequest;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
        requestLogProcessor = new RequestLogProcessor();
    }

    @Test
    void testProcess_ValidHttpRequest() {
        Map<String, String> mapData = new HashMap<>();

        // Act
        assertDoesNotThrow(() -> requestLogProcessor.process(mockRequest, mapData));

        // Verify that HttpRequestLoggingHelper.buildLogRequest() is called correctly
        verify(mockRequest, times(0)).getRequestURI(); // Adjust if needed based on HttpRequestLoggingHelper behavior
    }

    @Test
    void testProcess_InvalidObject_ThrowsException() {
        Map<String, String> mapData = new HashMap<>();
        Object invalidObject = new Object(); // Not an HttpServletRequest

        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () ->
                requestLogProcessor.process(invalidObject, mapData)
        );

        assertEquals("Invalid object type for RequestLogProcessor", exception.getMessage());
    }
}
D:\Fed project\POC Demo code\Fed-Simplification-github\feds-module-utilities\logging-utility\src\main\java\com\sb\fedssimplification\utilitymodules\loggingutility\enums\HttpStatus.java:11:12
java: constructor HttpStatus in enum com.sb.fedssimplification.utilitymodules.loggingutility.enums.HttpStatus cannot be applied to given types;
  required: no arguments
  found:    int,int,java.lang.String
  reason: actual and formal argument lists differ in length
