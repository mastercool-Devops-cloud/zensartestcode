import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import jakarta.servlet.http.HttpServletRequest;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import java.util.HashMap;
import java.util.Map;

class RequestLogProcessorTest {

    private RequestLogProcessor requestLogProcessor;

    @Mock
    private HttpServletRequest mockRequest;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
        requestLogProcessor = new RequestLogProcessor();
    }

    @Test
    void testProcess_ValidHttpRequest() {
        Map<String, String> mapData = new HashMap<>();

        // Act
        assertDoesNotThrow(() -> requestLogProcessor.process(mockRequest, mapData));

        // Verify that HttpRequestLoggingHelper.buildLogRequest() is called correctly
        verify(mockRequest, times(0)).getRequestURI(); // Adjust if needed based on HttpRequestLoggingHelper behavior
    }

    @Test
    void testProcess_InvalidObject_ThrowsException() {
        Map<String, String> mapData = new HashMap<>();
        Object invalidObject = new Object(); // Not an HttpServletRequest

        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () ->
                requestLogProcessor.process(invalidObject, mapData)
        );

        assertEquals("Invalid object type for RequestLogProcessor", exception.getMessage());
    }
}
ERROR] Failures: 
[ERROR]   RequestLogProcessorTest.testProcess_InvalidObject_ThrowsException:45 expected: <Invalid object type for RequestLogProcessor> but was: <Invalid object type for ResponseLogProcessor>
[ERROR]   RequestLogProcessorTest.testProcess_ValidHttpRequest:33 
mockRequest.getRequestURI();
Never wanted here:
-> at com.sb.fedssimplification.utilitymodules.loggingutility.processor.RequestLogProcessorTest.testProcess_ValidHttpRequest(RequestLogProcessorTest.java:33)
But invoked here:
-> at com.sb.fedssimplification.utilitymodules.loggingutility.helper.HttpRequestLogHelper.lambda$buildlogRequest$2(HttpRequestLogHelper.java:30) with arguments: []

-----------------------------------------
@Test
    void testProcess_ValidHttpRequest() {
        Map<String, String> mapData = new HashMap<>();
        
        // Stub the request behavior
        when(mockRequest.getRequestURI()).thenReturn("/test-uri");

        // Act
        assertDoesNotThrow(() -> requestLogProcessor.process(mockRequest, mapData));

        // Verify that getRequestURI() was called at least once
        verify(mockRequest, atLeastOnce()).getRequestURI();
    }

org.opentest4j.AssertionFailedError: expected: <Invalid object type for RequestLogProcessor> but was: <Invalid object type for ResponseLogProcessor>

	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at com.sb.fedssimplification.utilitymodules.loggingutility.processor.RequestLogProcessorTest.testProcess_InvalidObject_ThrowsException(RequestLogProcessorTest.java:47)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
------------------------------------------------
@Test
void testProcess_InvalidObject_ThrowsException() {
    Map<String, String> mapData = new HashMap<>();
    Object invalidObject = new Object(); // Not an HttpServletRequest

    IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () ->
            requestLogProcessor.process(invalidObject, mapData)
    );

    // Ensure correct exception message
    assertEquals("Invalid object type for RequestLogProcessor", exception.getMessage()); // âœ… This should now match
}

