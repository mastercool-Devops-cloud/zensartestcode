import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import java.util.Map;

class LogFactoryTest {

    private BaseLogDetails baseLogDetails;

    @BeforeEach
    void setUp() {
        baseLogDetails = Mockito.mock(BaseLogDetails.class);
    }

    @Test
    void testCreateRestLog() {
        // Given
        String httpMethod = "POST";
        String url = "http://example.com/api";
        Map<String, String> body = Map.of("key", "value");
        Integer statusCode = 200;
        long latencyMs = 150;

        // When
        RestLog restLog = LogFactory.createRestLog(baseLogDetails, httpMethod, url, body, statusCode, latencyMs);

        // Then
        assertNotNull(restLog);
        assertEquals(baseLogDetails, restLog.getBaseLogDetails());
        assertEquals(httpMethod, restLog.getHttpMethod());
        assertEquals(url, restLog.getUrl());
        assertEquals(body, restLog.getBody());
        assertEquals(statusCode, restLog.getStatusCode());
        assertEquals(latencyMs, restLog.getLatencyMs());
    }

    @Test
    void testCreateErrorLog() {
        // Given
        String errorMessage = "Null Pointer Exception";
        String stackTrace = "at com.example.Main.main(Main.java:10)";

        // When
        ErrorLog errorLog = LogFactory.createErrorLog(baseLogDetails, errorMessage, stackTrace);

        // Then
        assertNotNull(errorLog);
        assertEquals(baseLogDetails, errorLog.getBaseLogDetails());
        assertEquals(errorMessage, errorLog.getErrorMessage());
        assertEquals(stackTrace, errorLog.getStackTrace());
    }
}
