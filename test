import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.HttpStatus;

import java.util.Map;

@ExtendWith(MockitoExtension.class) // Enables Mockito support in JUnit 5
class LogFactoryTest {

    @Mock
    private BaseLogDetails baseLogDetails; // Mock BaseLogDetails

    @InjectMocks
    private LogFactory logFactory; // Automatically injects the mock

    @BeforeEach
    void setUp() {
        when(baseLogDetails.getSource()).thenReturn("test-source");
        when(baseLogDetails.getEnv()).thenReturn("test-env");
    }

    @Test
    void testCreateRestLog() {
        // Given
        String httpMethod = "POST";
        String url = "/api/test";
        Map<String, String> body = Map.of("key", "value");
        int statusCode = 200;
        HttpStatus level = HttpStatus.OK;
        long latencyMs = 150;

        // When
        RestLog restLog = logFactory.createRestLog(httpMethod, url, body, statusCode, level, latencyMs);

        // Then
        assertNotNull(restLog);
        assertEquals("test-source", restLog.getBaseLogDetails().getSource());
        assertEquals("test-env", restLog.getBaseLogDetails().getEnv());
        assertEquals(httpMethod, restLog.getHttpMethod());
        assertEquals(url, restLog.getUrl());
        assertEquals(body, restLog.getBody());
        assertEquals(statusCode, restLog.getStatusCode());
        assertEquals(level, restLog.getLevel());
        assertEquals(latencyMs, restLog.getLatencyMs());
    }

    @Test
    void testCreateErrorLog() {
        // Given
        int errorCode = 500;
        String errorMessage = "Internal Server Error";
        String stackTrace = "java.lang.NullPointerException at com.example.Main";

        // When
        ErrorLog errorLog = logFactory.createErrorLog(errorCode, errorMessage, stackTrace);

        // Then
        assertNotNull(errorLog);
        assertEquals("test-source", errorLog.getBaseLogDetails().getSource());
        assertEquals("test-env", errorLog.getBaseLogDetails().getEnv());
        assertEquals(errorCode, errorLog.getErrorCode());
        assertEquals(errorMessage, errorLog.getErrorMessage());
        assertEquals(stackTrace, errorLog.getStackTrace());
    }
}
