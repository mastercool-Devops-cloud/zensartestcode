import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.util.ReflectionTestUtils;

import java.net.InetAddress;
import java.net.UnknownHostException;

import static org.mockito.Mockito.*;

@ExtendWith(SpringExtension.class) // Enables Spring Context in JUnit 5
@SpringBootTest(classes = BaseLogConfig.class) // Loads only BaseLogConfig for testing
class BaseLogConfigTest {

    @Autowired
    private BaseLogConfig baseLogConfig;

    @Test
    void testBaseLogDetailsBeanCreation() throws UnknownHostException {
        // Given: Expected values
        String expectedSource = "test-app";
        String expectedEnvironment = "test-env";
        String expectedIpAddress = InetAddress.getLocalHost().getHostAddress();

        // Inject values into BaseLogConfig (Mocking @Value injection)
        ReflectionTestUtils.setField(baseLogConfig, "source", expectedSource);
        ReflectionTestUtils.setField(baseLogConfig, "environment", expectedEnvironment);

        // When: Creating the bean
        BaseLogDetails baseLogDetails = baseLogConfig.baseLogDetails(expectedSource, expectedEnvironment);

        // Then: Validate the bean properties
        assertNotNull(baseLogDetails);
        assertEquals(expectedSource, baseLogDetails.getSource());
        assertEquals(expectedEnvironment, baseLogDetails.getEnv());
        assertEquals(expectedIpAddress, baseLogDetails.getIpAddress()); // Validate generated IP
        assertNotNull(baseLogDetails.getTimestamp()); // Ensure timestamp is set
    }
}
