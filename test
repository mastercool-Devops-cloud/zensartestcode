@ExtendWith(MockitoExtension.class)
class LogServiceImplTest {

    @Mock
    private LogFactory logFactory;

    @Mock
    private LogProcessorService logProcessorService;

    private LogServiceImpl logService;

    @BeforeEach
    void setUp() {
        logService = new LogServiceImpl(logFactory, logProcessorService);

        // Inject @Value fields manually
        ReflectionTestUtils.setField(logService, "application", "TestApp");
        ReflectionTestUtils.setField(logService, "environment", "DEV");
    }

    @Test
    void testLogException() {
        // Given
        Exception exception = new RuntimeException("Test exception");
        BaseLogDetails baseLogDetails = new BaseLogDetails(
                TimeUtil.getCurrentTimestamp(), "DEV", "TestApp", IpAddressUtil.getHostIpAddress()
        );
        ErrorLog errorLog = new ErrorLog(baseLogDetails, 500, "Test exception", "stacktrace");

        // Mock behavior
        Mockito.when(logFactory.createErrorLog(
                any(BaseLogDetails.class),
                eq(500),
                eq("Test exception"),
                anyString()
        )).thenReturn(errorLog);

        // When
        logService.logException(exception);

        // Then
        Mockito.verify(logProcessorService).processLog(errorLog, LogType.ERROR);
    }
}
