SELECT DBMS_METADATA.GET_DDL('TABLE', ?) FROM DUAL

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.stream.Collectors;

@Repository
public class SchemaExporterRepository {
    private final JdbcTemplate jdbcTemplate;

    public SchemaExporterRepository(JdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

    // Extract table schema (DDL)
    public String getTableDDL(String schemaName, String tableName) {
        String sql = "SELECT DBMS_METADATA.GET_DDL('TABLE', ?, ?) FROM DUAL";
        return jdbcTemplate.queryForObject(sql, new Object[]{tableName.toUpperCase(), schemaName.toUpperCase()}, String.class);
    }

    // Extract table data (INSERT statements)
    public List<String> getTableData(String schemaName, String tableName) {
        String sql = "SELECT * FROM " + schemaName + "." + tableName;
        return jdbcTemplate.query(sql, (rs, rowNum) -> {
            int columnCount = rs.getMetaData().getColumnCount();
            StringBuilder insertStmt = new StringBuilder("INSERT INTO " + schemaName + "." + tableName + " VALUES (");
            for (int i = 1; i <= columnCount; i++) {
                Object value = rs.getObject(i);
                if (value instanceof String) {
                    insertStmt.append("'").append(value.toString().replace("'", "''")).append("'");
                } else if (value == null) {
                    insertStmt.append("NULL");
                } else {
                    insertStmt.append(value);
                }
                if (i < columnCount) insertStmt.append(", ");
            }
            insertStmt.append(");");
            return insertStmt.toString();
        });
    }
}

----------------------------------------------
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class SchemaExporterTest {

    @Autowired
    private SchemaExporterRepository schemaExporterRepository;

    @Test
    public void testGenerateSchemaAndData() throws IOException {
        // Define schema and table name
        String schemaName = "FX";
        String tableName = "FX_FEC_AUTOM_DEV";

        // Fetch table schema (DDL)
        String ddlScript = schemaExporterRepository.getTableDDL(schemaName, tableName);

        // Fetch table data (INSERT statements)
        List<String> insertStatements = schemaExporterRepository.getTableData(schemaName, tableName);

        // Define output file path
        String filePath = "src/test/resources/sql/schema.sql";
        File file = new File(filePath);

        // Ensure directory exists
        file.getParentFile().mkdirs();

        // Write to file
        try (FileWriter writer = new FileWriter(file)) {
            // Write schema DDL
            writer.write("-- Table Schema\n");
            writer.write(ddlScript + ";\n\n");

            // Write data INSERT statements
            writer.write("-- Table Data\n");
            for (String insertStmt : insertStatements) {
                writer.write(insertStmt + "\n");
            }
        }

        System.out.println("Schema & Data for " + tableName + " exported to: " + file.getAbsolutePath());
    }
}
