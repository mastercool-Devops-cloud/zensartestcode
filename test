@SpringBootTest
@ExtendWith(SpringExtension.class)
@Import({DbOracleRealConfig.class, SchemaExporterRepository.class})
@TestInstance(TestInstance.Lifecycle.PER_CLASS)  // Ensures setup runs once before all tests
@TestMethodOrder(MethodOrderer.OrderAnnotation.class)  // Allows ordering
public class SchemaExporterTest {

    @Autowired
    private SchemaExporterRepository schemaExporterRepository;

    private static final String CONFIG_KEY = "schema.export.enabled";
    private static boolean isSchemaExportEnabled;

    @BeforeAll
    static void setup() {
        // Check if schema export is enabled via system property or application.properties
        isSchemaExportEnabled = Boolean.parseBoolean(System.getProperty(CONFIG_KEY, "true"));  // Default: true

        if (isSchemaExportEnabled) {
            System.out.println("‚úÖ Schema export is enabled. Running SchemaExporterTest...");
        } else {
            System.out.println("‚ùå Schema export is disabled. Skipping SchemaExporterTest...");
        }
    }

    @Test
    @Order(1)  // Ensure this test runs first
    void testGenerateSchemaAndData() throws IOException {
        if (!isSchemaExportEnabled) {
            System.out.println("üîπ Skipping schema export as it's disabled.");
            return;
        }

        // Define schema and table name
        String schemaName = "FX";
        String tableName = "FX_FEC_AUTOM_DEV";

        // Fetch table schema (DDL)
        String ddlScript = schemaExporterRepository.getTableDDL(schemaName, tableName);

        // Define output file path
        String filePath = "src/test/resources/sql/schema.sql";
        File file = new File(filePath);

        // Ensure directory exists
        file.getParentFile().mkdirs();

        // Write to file
        try (FileWriter writer = new FileWriter(file)) {
            writer.write("-- Table Schema\n");
            writer.write(ddlScript + ";\n\n");
        }

        System.out.println("‚úÖ Schema & Data for " + tableName + " exported to: " + file.getAbsolutePath());
    }
}
